-function prettyDate(dateString){
	-var date = new Date(dateString);
	-var d = date.getDate(dateString);
	-var monthNames = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
	-var m = monthNames[date.getMonth()];
	-var y = date.getFullYear();
	-return d+' '+m+' '+y;
-} 
html  
	head
		style
			include style.css
		script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js')
		script(src='../js/simulate.js')
	body
		h2(id='iter'+ nb) Iteration no #{nb} - Matchs (cotes de Pinnacle)
		table(class='small')
			thead
				td Date
				td Domicile
				td Match Nul
				td Extérieur
				td Résultat Final
			each game in games
				tr
					td #{prettyDate(game.date)}
					td #{game.home_team} (#{game.home_odd})
					td (#{game.draw_odd})
					td #{game.away_team} (#{game.away_odd})					
					case game.final_result
						when "H"
							td #{game.home_team}
						when "D"
							td Match nul
						when "A"
							td #{game.away_team}
		h2 Iteration no #{nb} - Résultats finaux
		.
			Capital initial #{init_bankroll} € - Capital final #{final_bankroll} € 
		br
		if gains_finaux > 0
			span(style={color: 'green'}) Gains finaux : #{gains_finaux} (frais de #{frais} déduits)
		else
			span(style={color: 'red'}) Gains finaux : #{gains_finaux} (frais de #{frais} déduits)
		br
		.
			Nb de paris joués : #{final_betNumber} paris
		br
		.
			Temps passé sur cette simulation : #{elapsed} milliseconds
		h2 Iteration no #{nb} - Détails
		each log,position in logs		
			
			case log.type
				when "pari_important"
					h3(class=`log ${log.type}`) #{log.msg}
				when "msg_important"
					h3(class=`log ${log.type}`) #{log.msg}
				when "pari_tableau"
					table(class='insidelogs')
						thead
							td
							if log.gameLogObject[0]
								td #{log.gameLogObject[0].who} 
							if log.gameLogObject[1]
								td #{log.gameLogObject[1].who} 
							if log.gameLogObject[2]
								td #{log.gameLogObject[2].who} 
						tr
							td(class='rowname') Site
							if log.gameLogObject[0]
								td 
									span #{log.gameLogObject[0].site} (#{log.gameLogObject[0].using_bonus_solde_text})
							if log.gameLogObject[1]
								td 
									span #{log.gameLogObject[1].site} (#{log.gameLogObject[1].using_bonus_solde_text})
							if log.gameLogObject[2]
								td 
									span #{log.gameLogObject[2].site} (#{log.gameLogObject[2].using_bonus_solde_text})
						tr
							td(class='rowname') Mise
							if log.gameLogObject[0]
								td 
									span #{log.gameLogObject[0].bet} €
							if log.gameLogObject[1]
								td 
									span #{log.gameLogObject[1].bet} € 
							if log.gameLogObject[2]
								td 
									span #{log.gameLogObject[2].bet} € 
							td(class='rowname') Payout
						tr
							td(class='rowname') Cote
							if log.gameLogObject[0]
								td #{log.gameLogObject[0].odd}
							if log.gameLogObject[1]
								td #{log.gameLogObject[1].odd} 
							if log.gameLogObject[2]
								td #{log.gameLogObject[2].odd} 
							if log.gameLogObject[0]
								td #{log.gameLogObject[0].payout} %
							else if log.gameLogObject[1]
								td #{log.gameLogObject[1].payout} %
							else if log.gameLogObject[2]
								td #{log.gameLogObject[2].payout} % 
						tr
							td(class='rowname') Gains
							if log.gameLogObject[0]
								td(class='gains') #{log.gameLogObject[0].gains} €
							if log.gameLogObject[1] 
								td(class='gains') #{log.gameLogObject[1].gains} €
							if log.gameLogObject[2]
								td(class='gains') #{log.gameLogObject[2].gains} €
						tr
							td(class='rowname') GAB
							if log.gameLogObject[0]
								td #{log.gameLogObject[0].gab}
							if log.gameLogObject[1]
								td #{log.gameLogObject[1].gab} 
							if log.gameLogObject[2]
								td #{log.gameLogObject[2].gab} 						

				when "games"
					span(class='log') Matchs Disponibles : <a href="#0" onclick="showHideGames(#{nb},#{log.betNumber});">Afficher/Cacher</a>
					br
					div(class=`games_log games_${nb}_${log.betNumber}`)
						table(class='small')
							thead
								td Date
								td Domicile
								td Match Nul
								td Extérieur
							each game in log.games
								tr
									td #{prettyDate(game.date)}
									td #{game.home_team} (#{game.home_odd})
									td (#{game.draw_odd})
									td #{game.away_team} (#{game.away_odd})	
				when "sites"	
					- 
						var totalDeposit = 0;
						var totalSolde = 0;
						var totalRetrait = 0;									
					table(class='sites')
						thead
							td Site
							td Statut
							td Dépôt
							td Solde
							td Solde Bonus
							td Bonus restant à valider
							td Retrait
						each site in log.info.sites	
							- 
								totalDeposit = (totalDeposit + site.deposit)
								totalSolde = (totalSolde + site.solde + site.bonus_solde)
								totalRetrait = (totalRetrait + site.withdraw)
							tr(class=`${site.site_status}`)
								td(class='sitename') #{site.name}
								case site.site_status
									when "done"
										td Terminé
									when "just_started"
										td Commencé
									when "ongoing"
										td En cours
									when "not yet"
										td Pas encore commencé								
								td #{site.deposit}
								td #{site.solde}
								td #{site.bonus_solde}
								td #{site.bonus_remaining}
								td #{site.withdraw}
						tr(class='sites_total')
							td TOTAL
							td 
							td #{totalDeposit.toFixed(2)}
							td(colspan=2) #{totalSolde.toFixed(2)}							 
							td
							td #{totalRetrait.toFixed(2)}
						tr(class='sites_total')
							-
								var totalGains = (totalRetrait - totalDeposit + totalSolde - 97 ).toFixed(2)
							td(colspan=6) Gains (frais de 97 € déduits ) : 
							td #{totalGains} €
						tr
							td(colspan=7 class='bankroll') Bankroll dispo #{log.info.bankroll} €
				default
					span(class=`log ${log.type}`) #{log.msg}
			br
		br
		br
		a(href='#iter' + nb) Retourner en haut de cette itération
		br
		a(href='#begin') Retourner TOUT en haut de cette simulation
		br
		br

		



